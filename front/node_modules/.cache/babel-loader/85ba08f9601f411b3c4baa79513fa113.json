{"ast":null,"code":"var _jsxFileName = \"/Users/alecadelman/Desktop/the-notes/front/src/Suggestion.js\";\nimport React, { useState } from \"react\";\nimport \"./Suggestion.css\";\n\nconst Suggestion = () => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [notes, setNotes] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [flash, setFlash] = useState();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetch(\"/api/add\", {\n      method: \"POST\",\n      headers: new Headers({\n        \"Content-Type\": \"application/json\"\n      }),\n      body: JSON.stringify({\n        name: name,\n        email: email,\n        notes: notes,\n        message: message\n      })\n    }).then(res => res.json()).then(res => setFlash(res.flash), err => setFlash(err.flash));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"Suggest a mode or scale!\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"Be sure to leave us a message with your contact information and an explanation of the scale's values and/or resources for music theory.\")), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => handleSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setName(e.target.value),\n    type: \"text\",\n    name: \"name\",\n    value: name,\n    placeholder: \"Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setEmail(e.target.value),\n    type: \"text\",\n    name: \"email\",\n    value: email,\n    placeholder: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setNotes(e.target.value),\n    type: \"text\",\n    name: \"notes\",\n    value: notes,\n    placeholder: \"Notes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"message\",\n    onChange: e => setMessage(e.target.value),\n    type: \"text\",\n    name: \"message\",\n    value: message,\n    placeholder: \"Message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default Suggestion;","map":{"version":3,"sources":["/Users/alecadelman/Desktop/the-notes/front/src/Suggestion.js"],"names":["React","useState","Suggestion","name","setName","email","setEmail","notes","setNotes","message","setMessage","flash","setFlash","handleSubmit","e","preventDefault","fetch","method","headers","Headers","body","JSON","stringify","then","res","json","err","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./Suggestion.css\";\n\n\nconst Suggestion = () => {\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [notes, setNotes] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n    const [flash, setFlash] = useState();\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        fetch(\"/api/add\", {\n            method: \"POST\",\n            headers: new Headers({\n                \"Content-Type\": \"application/json\",\n            }),\n            body: JSON.stringify({\n                name: name,\n                email: email,\n                notes: notes,\n                message: message,\n            }),\n        })\n            .then((res) => res.json())\n            .then(\n                (res) => setFlash(res.flash),\n                (err) => setFlash(err.flash)\n            );\n    };\n\n    return (\n        <div>\n            <div className=\"info\">\n            <h1>Suggest a mode or scale!</h1>\n            <p>Be sure to leave us a message with your contact information and an explanation of the scale's values and/or resources for music theory.</p>\n            </div>\n            <form onSubmit={(e) => handleSubmit(e)}>\n                <input onChange={(e) => setName(e.target.value)} type=\"text\" name=\"name\" value={name} placeholder=\"Name\"/>\n                <input onChange={(e) => setEmail(e.target.value)} type=\"text\" name=\"email\" value={email} placeholder=\"Email\"/>\n                <input onChange={(e) => setNotes(e.target.value)} type=\"text\" name=\"notes\" value={notes} placeholder=\"Notes\"/>\n                <input id=\"message\" onChange={(e) => setMessage(e.target.value)} type=\"text\" name=\"message\" value={message} placeholder=\"Message\"/>\n                <input type=\"submit\" value=\"Submit\"/>\n            </form>\n        </div>\n    );\n};\n\nexport default Suggestion;"]},"metadata":{},"sourceType":"module"}